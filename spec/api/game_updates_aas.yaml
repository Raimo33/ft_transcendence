asyncapi: 3.0.0
info:
  title: Pongfumasters Game Updates API
  description: API for Pongfumasters game updates.
  version: 1.0.0
servers:
  game_updates:
    description: Server for live WebSocket game updates.
    host: api.pongfumasters.com
    protocol: wss
    security:
      - $ref: '#/components/securitySchemes/httpBearerToken'
channels:
  game_updates:
    description: Channel for real-time game updates via WebSocket.
    address: /matches/{match_id}/updates
    parameters:
      match_id:
        $ref: '#/components/parameters/match_id'
    messages:
      input:
        $ref: '#/components/messages/InputMessage'
      gameState:
        $ref: '#/components/messages/GameStateMessage'
      gameOver:
        $ref: '#/components/messages/GameOverMessage'
operations:
  sendInput:
    action: send
    channel:
      $ref: '#/channels/game_updates'
    messages:
      - $ref: '#/channels/game_updates/messages/input'
  receiveGameState:
    action: receive
    channel:
      $ref: '#/channels/game_updates'
    messages:
      - $ref: '#/channels/game_updates/messages/gameState'
      - $ref: '#/channels/game_updates/messages/gameOver'
components:
  messages:
    InputMessage:
      name: InputMessage
      contentType: application/json
      payload:
        type: object
        properties:
          direction:
            description: True for up, false for down.
            type: boolean
          timestamp:
            $ref: '#/components/schemas/timestamp'
    GameStateMessage:
      name: GameStateMessage
      contentType: application/json
      payload:
        type: object
        properties:
          ballPosition:
            $ref: '#/components/schemas/vec2'
          ballVelocity:
            $ref: '#/components/schemas/vec2'
          paddlePositions:
            type: object
            properties:
              player1:
                $ref: '#/components/schemas/paddle_position'
              player2:
                $ref: '#/components/schemas/paddle_position'
          scores:
            $ref: '#/components/schemas/scores'
          timestamp:
            $ref: '#/components/schemas/timestamp'
    GameOverMessage:
      name: GameOverMessage
      contentType: application/json
      payload:
        type: object
        properties:
          winner:
            $ref: '#/components/schemas/user_id'
          scores:
            $ref: '#/components/schemas/scores'
  schemas:
    user_id:
      description: Unique identifier for the user.
      type: string
      format: uuid
    match_id:
      description: Unique identifier for the match.
      type: string
      format: uuid
    timestamp:
      description: Timestamp in unix timestamp format.
      type: integer
      format: uint64
      minimum: 0
    vec2:
      type: object
      properties:
        x:
          type: number
          format: float
        y:
          type: number
          format: float
    paddle_position:
      description: Position of the paddle; 0 is top, 1 is bottom.
      type: number
      format: float
      minimum: 0
      maximum: 1
    score:
      description: Score of a player.
      type: integer
      format: uint8
      minimum: 0
    scores:
      type: object
      properties:
        player1:
          $ref: '#/components/schemas/score'
        player2:
          $ref: '#/components/schemas/score'
  securitySchemes:
    httpBearerToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    match_id:
      description: Unique identifier for the match.
      location: $message.payload#/matches/{match_id}