# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    game_updates_aas.yaml                              :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: craimond <bomboclat@bidol.juis>            +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2024/12/14 17:42:06 by craimond          #+#    #+#              #
#    Updated: 2024/12/18 16:34:06 by craimond         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

asyncapi: 3.0.0
info:
  title: Pongfumasters Game Updates API
  description: API for Pongfumasters game updates.
  version: 1.0.0
servers:
  game_updates:
    description: Server for live WebSocket game updates.
    host: api.pongfumasters.com
    protocol: wss
channels:
  game_updates:
    description: Channel for real-time game updates via WebSocket.
    address: /matches/{match_id}/updates #TODO oppure pathname?
    parameters:
      match_id:
        description: Unique identifier for the match.
        schema:
          $ref: '#/components/schemas/match_id'
    messages:
      handshake:
        $ref: '#/components/messages/HandshakeMessage'
      input:
        $ref: '#/components/messages/InputMessage'
      gameState:
        $ref: '#/components/messages/GameStateMessage'
      gameOver:
        $ref: '#/components/messages/GameOverMessage'
    bindings:
      wss:
        $ref: '#/components/bindings/wss'
operations:
  #TODO
# application ?
  #TODO
components:
  bindings:
    wss:
      headers:
        authorization:
          $ref: '#/components/schemas/authorization_header'
  messages:
    HandshakeMessage:
      name: HandshakeMessage
      contentType: application/json
      payload: null
    InputMessage:
      name: InputMessage
      contentType: application/json
      payload:
        type: object
        properties:
          direction:
            description: True for up, false for down.
            type: boolean
          timestamp:
            $ref: '#/components/schemas/timestamp'
    GameStateMessage:
      name: GameStateMessage
      contentType: application/json
      payload:
        type: object
        properties:
          ballPosition:
            $ref: '#/components/schemas/vec2'
          ballVelocity:
            $ref: '#/components/schemas/vec2'
          paddlePositions:
            type: object
            properties:
              player1:
                $ref: '#/components/schemas/paddle_position'
              player2:
                $ref: '#/components/schemas/paddle_position'
          scores:
            type: object
            properties:
              player1:
                $ref: '#/components/schemas/score'
              player2:
                $ref: '#/components/schemas/score'
          timestamp:
            $ref: '#/components/schemas/timestamp'
    GameOverMessage:
      name: GameOverMessage
      contentType: application/json
      payload:
        type: object
        properties:
          type: object
          properties:
            winner:
              $ref: '#/components/schemas/user_id'
            scores:
              type: object
              properties:
                player1:
                  $ref: '#/components/schemas/score'
                player2:
                  $ref: '#/components/schemas/score'
  schemas:
    user_id:
      description: Unique identifier for the user.
      type: string
      format: uuid
    match_id:
      description: Unique identifier for the match.
      type: string
      format: uuid
    jwt:
      description: JSON Web Token for authentication.
      type: string
    timestamp:
      description: Timestamp in unix timestamp format.
      type: integer
      format: int64
      minimum: 0
    vec2:
      type: object
      properties:
        x:
          type: number
          format: float
        y:
          type: number
          format: float
    paddle_position:
      description: Position of the paddle; 0 is top, 1 is bottom.
      type: number
      format: float
    score:
      type: integer
      minimum: 0
