asyncapi: 3.0.0
info:
  title: Pongfu Match Updates API
  description: API for Pongfu match updates.
  version: 1.0.0
servers:
  match_updates:
    description: Server for live WebSocket match updates.
    host: api.pongfu.com
    protocol: wss
    security:
      - $ref: '#/components/securitySchemes/httpBearerToken'
channels:
  match_updates:
    description: Channel for real-time match updates via WebSocket.
    address: /matches/{match_id}/updates
    parameters:
      match_id:
        $ref: '#/components/parameters/match_id'
    messages:
      input:
        $ref: '#/components/messages/InputMessage'
      playersInfo:
        $ref: '#/components/messages/PlayersInfoMessage'
      MatchState:
        $ref: '#/components/messages/MatchStateMessage'
      error:
        $ref: '#/components/messages/ErrorMessage'
operations:
  sendInput:
    action: send
    channel:
      $ref: '#/channels/match_updates'
    messages:
      - $ref: '#/channels/match_updates/messages/input'
  receiveMatchState:
    action: receive
    channel:
      $ref: '#/channels/match_updates'
    messages:
      - $ref: '#/channels/match_updates/messages/playersInfoMessage'
      - $ref: '#/channels/match_updates/messages/MatchState'
      - $ref: '#/channels/match_updates/messages/error'
components:
  messages:
    InputMessage:
      name: InputMessage
      contentType: application/json
      payload:
        type: object
        properties:
          operation_id:
            type: string
            const: input
          direction:
            $ref: '#/components/schemas/direction'
          timestamp:
            $ref: '#/components/schemas/timestamp'
    PlayersInfoMessage:
      name: PlayersInfoMessage
      contentType: application/json
      payload:
        type: object
        properties:
          operation_id:
            type: string
            const: players_info
          player_1_id:
            $ref: '#/components/schemas/user_id'
          player_2_id:
            $ref: '#/components/schemas/user_id'
    MatchStateMessage:
      name: MatchStateMessage
      contentType: application/json
      payload:
        type: object
        properties:
          operation_id:
            type: string
            const: match_state
          ball_position:
            $ref: '#/components/schemas/ball_position'
          ball_velocity:
            $ref: '#/components/schemas/ball_velocity'
          paddle_positions:
            $ref: '#/components/schemas/paddle_positions'
          health_points:
            $ref: '#/components/schemas/health_points'
          status:
            $ref: '#/components/schemas/status'
          timestamp:
            $ref: '#/components/schemas/timestamp'
    ErrorMessage:
        name: ErrorMessage
        contentType: application/json
        payload:
          type: object
          properties:
            operation_id:
              type: string
              const: error
            code:
              $ref: '#/components/schemas/error_code'
            message:
              $ref: '#/components/schemas/error_message'
  schemas:
    user_id:
      description: Unique identifier for the user.
      type: string
      format: uuid
    match_id:
      description: Unique identifier for the match.
      type: string
      format: uuid
    coordinate:
      description: Coordinate as a float between 0 and 1.
      type: number
      format: float
      minimum: 0
      maximum: 1
    direction:
      description: Direction of the paddle; -1 is up, 1 is down.
      type: integer
      format: int8
      minimum: -1
      maximum: 1
    hp:
      description: Health points of the player.
      type: integer
      format: uint8
      minimum: 0
    timestamp:
      description: Timestamp in unix timestamp format.
      type: integer
      format: uint64
      minimum: 0
    ball_position:
      description: Position of the ball as [x, y].
      type: array
      minItems: 2
      maxItems: 2
      items:
        $ref: '#/components/schemas/coordinate'
    ball_velocity:
      description: Velocity of the ball as [x, y].
      type: array
      minItems: 2
      maxItems: 2
      items:
        $ref: '#/components/schemas/direction'
    paddle_positions:
      description: Positions of the paddles as [player_1, player_2].
      type: array
      minItems: 2
      maxItems: 2
      items:
        $ref: '#/components/schemas/coordinate'
    health_points:
      description: Health points of the players as [player_1, player_2].
      type: array
      minItems: 2
      maxItems: 2
      items:
        $ref: '#/components/schemas/hp'
    status:
      description: Status of the match.
      type: string
      enum:
        - waiting
        - ongoing
        - ended
    error_code:
      description: Error code in http status code format.
      type: integer
      format: uint16
      minimum: 100
      maximum: 599
    error_message:
      description: Human-readable error message.
      type: string
  securitySchemes:
    httpBearerToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    match_id:
      description: Unique identifier for the match.
      location: $message.payload#/matches/{match_id}