syntax = "proto3";

package db_gateway.user;


service DBGatewayUserService
{
  rpc ExecuteQuery      (Query)                       returns (QueryResult) {}
  rpc ExecuteBatch      (stream Query)                returns (stream QueryResult) {}
  rpc Transaction       (TransactionRequest)          returns (TransactionResponse) {}
  rpc PrepareStatement  (PrepareStatementRequest)     returns (PreparedStatementResponse) {}
  rpc ExecutePrepared   (ExecutePreparedRequest)      returns (QueryResult) {}
}

message Value
{
  oneof value
  {
    int64   int     = 1;
    double  double  = 2;
    string  string  = 3;
    bytes   bytes   = 4;
    bool    bool    = 5;
    string  date    = 6;
    string  json    = 7;
    Null    null    = 8;
  }
}

message Null {}

message Row
{
  repeated Value values = 1;
}

message Column
{
  string name = 1;
  string type = 2;
}

enum TransactionAction
{
  BEGIN     = 0;
  COMMIT    = 1;
  ROLLBACK  = 2;
  EXECUTE   = 3;
}

enum TransactionStatus {
  SUCCESS = 0;
  FAILURE = 1;
}

message Query
{
  string             query  = 1;
  map<string, Value> params = 2;
}
message QueryResult
{
  repeated Row    rows    = 1;
  repeated Column columns = 2;
  uint16          status  = 3;
}

message TransactionRequest
{
  string            transaction_id  = 1;
  TransactionAction action          = 2;
  repeated Query    queries         = 3;
}
message TransactionResponse
{
  string               transaction_id  = 1;
  TransactionStatus    status          = 2;
  repeated QueryResult results         = 3;
}

message PrepareStatementRequest
{
  string query = 1;
}
message PreparedStatementResponse
{
  string statement_id = 1;
}

message ExecutePreparedRequest
{
  string             statement_id = 1;
  map<string, Value> params       = 2;
}