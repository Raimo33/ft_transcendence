syntax = "proto3";

package user;

import "common.proto";

service UserService
{
    rpc RegisterUser                  (RegisterUserRequest)                  returns (RegisterUserResponse) {}
    rpc GetUser                       (GetUserRequest)                       returns (GetUserResponse) {}
    rpc DeleteUser                    (DeleteUserRequest)                    returns (DeleteUserResponse) {}
    rpc GetUserProfile                (GetUserProfileRequest)                returns (GetUserProfileResponse) {}
    rpc UpdateUserProfile             (UpdateUserProfileRequest)             returns (UpdateUserProfileResponse) {}
    rpc UpdateUserPassword            (UpdateUserPasswordRequest)            returns (UpdateUserPasswordResponse) {}
    rpc UpdateUserEmail               (UpdateUserEmailRequest)               returns (UpdateUserEmailResponse) {}
    rpc VerifyUserEmail               (VerifyUserEmailRequest)               returns (VerifyUserEmailResponse) {}
    rpc VerifyEmailVerificationToken  (VerifyEmailVerificationTokenRequest)  returns (VerifyEmailVerificationTokenResponse) {}
    rpc Enable2FA                     (Enable2FARequest)                     returns (Enable2FAResponse) {}
    rpc Get2FAStatus                  (Get2FAStatusRequest)                  returns (Get2FAStatusResponse) {}
    rpc Disable2FA                    (Disable2FARequest)                    returns (Disable2FAResponse) {}
    rpc Verify2FACode                 (Verify2FACodeRequest)                 returns (Verify2FACodeResponse) {}
    rpc AddFriend                     (AddFriendRequest)                     returns (AddFriendResponse) {}
    rpc GetFriends                    (GetFriendsRequest)                    returns (GetFriendsResponse) {}
    rpc RemoveFriend                  (RemoveFriendRequest)                  returns (RemoveFriendResponse) {}
    rpc LoginUser                     (LoginUserRequest)                     returns (LoginUserResponse) {}
    rpc GetUserStatus                 (GetUserStatusRequest)                 returns (GetUserStatusResponse) {}
    rpc LogoutUser                    (LogoutUserRequest)                    returns (LogoutUserResponse) {}
    rpc RecoverUserPassword           (RecoverUserPasswordRequest)           returns (RecoverUserPasswordResponse) {}
    rpc VerifyPasswordRecoveryToken   (VerifyPasswordRecoveryTokenRequest)   returns (VerifyPasswordRecoveryTokenResponse) {}
    rpc Recover2FA                    (Recover2FARequest)                    returns (Recover2FAResponse) {}
    rpc Verify2FARecoveryToken        (Verify2FARecoveryTokenRequest)        returns (Verify2FARecoveryTokenResponse) {}
  }

enum profile_sorting_options
{
    DISPLAY_NAME = 0;
    REGISTERED_TIMESTAMP = 1;
    LAST_ACTIVE_TIMESTAMP = 2;
}

message profile_filters
{
    optional user_status status = 1;
    // Add more filter options here
}

// v1/users POST
message RegisterUserRequest
{
    string          email = 1;
    string          password = 2;
    string          display_name = 3;
    optional string avatar = 4;
}
message RegisterUserResponse
{
    int32             status_code = 1;
    optional string   user_id = 2;
}

// v1/users/{user_id} GET
message GetUserRequest
{
    string user_id = 1;
}
message GetUserResponse
{
    int32         status_code = 1;
    optional user user = 2;
}

// v1/users/{user_id} DELETE
message DeleteUserRequest
{
    string user_id = 1;
}
message DeleteUserResponse
{
    int32 status_code = 1;
}

// v1/users/{user_id}/profile GET
message GetUserProfileRequest
{
    repeated string user_ids = 1;
}
message GetUserProfileResponse
{
    int32                           status_code = 1;
    optional repeated user_profile  user_profiles = 2;
}

// v1/users/{user_id}/profile PATCH
message UpdateUserProfileRequest
{
    string           user_id = 1;
    optional string  display_name = 2;
    optional string  avatar = 3;
}
message UpdateUserProfileResponse
{
    int32 status_code = 1;
}

// v1/users/{user_id}/password PUT
message UpdateUserPasswordRequest
{
    string  user_id = 1;
    string  old_password = 2;
    string  new_password = 3;
}
message UpdateUserPasswordResponse
{
    int32 status_code = 1;
}

// v1/users/{user_id}/email PUT
message UpdateUserEmailRequest
{
    string  user_id = 1;
    string  new_email = 2;
}
message UpdateUserEmailResponse
{
    int32 status_code = 1;
}

// v1/users/{user_id}/email/verify POST
message VerifyUserEmailRequest
{
    string  user_id = 1;
}
message VerifyUserEmailResponse
{
    int32 status_code = 1;
}

// v1/users/{user_id}/email/verify/{token} POST
message VerifyEmailVerificationTokenRequest
{
    string  user_id = 1;
    string  token = 2;
}
message VerifyEmailVerificationTokenResponse
{
    int32 status_code = 1;
}

// v1/users/{user_id}/2fa POST
message Enable2FARequest
{
    string  user_id = 1;
}
message Enable2FAResponse
{
    int32 status_code = 1;
}

// v1/users/{user_id}/2fa GET
message Get2FAStatusRequest
{
    string user_id = 1;
}
message Get2FAStatusResponse
{
    int32         status_code = 1;
    optional bool two_factor_auth = 2;
}

// v1/users/{user_id}/2fa DELETE
message Disable2FARequest
{
    string user_id = 1;
}
message Disable2FAResponse
{
    int32  status_code = 1;
}

// v1/users/{user_id}/2fa/verify POST
message Verify2FACodeRequest
{
    string  user_id = 1;
    string  totp_code = 2;
}
message Verify2FACodeResponse
{
    int32  status_code = 1;
}

// v1/users/{user_id}/friends POST
message AddFriendRequest
{
    string  user_id = 1;
    string  friend_id = 2;
}
message AddFriendResponse
{
    int32  status_code = 1;
}

// v1/users/{user_id}/friends/ GET
message GetFriendsRequest
{
    string                           user_id = 1;
    optional uint32                  limit = 2;
    optional uint32                  offset = 3;
    optional profile_sorting_options sort_by = 4;
    optional profile_filters         filters = 5;
}
message GetFriendsResponse
{
    int32                     status_code = 1;
    optional repeated string  friend_ids = 2;
}

// v1/users/{user_id}/friends/{friend_id} DELETE
message RemoveFriendRequest
{
    string  user_id = 1;
    string  friend_id = 2;
}
message RemoveFriendResponse
{
    int32 status_code = 1;
}

// v1/users/{user_id}/2fa/recovery POST
message Recover2FARequest
{
    string user_email = 1;
}
message Recover2FAResponse
{
    int32  status_code = 1;
}

// v1/users/{user_id}/2fa/recovery/{token} POST
message verify2FARecoveryTokenRequest
{
    string  recovery_token = 2;
}
message verify2FARecoveryTokenResponse
{
    int32  status_code = 1;
}

// v1/users/{user_id}/password/recovery POST
message RecoverUserPasswordRequest
{
    string  email = 2;
}
message RecoverUserPasswordResponse
{
    int32 status_code = 1;
}

// v1/users/{user_id}/password/recovery/{token} POST
message VerifyPasswordRecoveryTokenRequest
{
    string  recovery_token = 2;
    string  new_password = 3;
}
message VerifyPasswordRecoveryTokenResponse
{
    int32 status_code = 1;
}

// v1/sessions/{user_id} POST
message LoginUserRequest
{
    string  user_id = 1;
    string  password = 2;
}
message LoginUserResponse
{
    int32           status_code = 1;
    optional string jwt_token = 2;
}

// v1/sessions/{user_id} GET
message GetUserStatusRequest
{
    string  user_id = 1;
}
message GetUserStatusResponse
{
    int32                 status_code = 1;
    optional user_status  user_status = 2;
}

// v1/sessions/{user_id} DELETE
message LogoutUserRequest
{
    string  user_id = 1;
}
message LogoutUserResponse
{
    int32 status_code = 1;
}