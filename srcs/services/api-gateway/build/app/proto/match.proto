syntax = "proto3";

package match;


service MatchService
{
    rpc GetUserMatches     (GetUserMatchesRequest)    returns (GetUserMatchesResponse) {}
    rpc CreateMatch        (CreateMatchRequest)       returns (CreateMatchResponse) {}
    rpc JoinMatch          (JoinMatchRequest)         returns (JoinMatchResponse) {}
    rpc GetMatch           (GetMatchRequest)          returns (GetMatchResponse) {}
    rpc AbandonMatch       (AbandonMatchRequest)      returns (AbandonMatchResponse) {}
}

enum match_status
{
    ONGOING = 0;
    COMPLETED = 1;
    INTERRUPTED = 2;
}
message match_settings
{
    uint8  ball_speed = 1;
    uint16 max_duration = 2;
    uint8  starting_health = 3;
}
message match
{
    string           id = 1;
    optional string  websocket_url = 2;
    repeated string  player_ids = 3;
    match_status     status = 4;
    uint64           started_timestamp = 5;
    optional uint64  finished_timestamp = 6;
    match_settings   settings = 7;
}

enum player_match_sorting_options
{
    AGE = 0;
    DURATION = 1;
    NUMBER_OF_PLAYERS = 2;
    POSITION = 3;
}

message player_match_filters
{
    optional match_status  status = 1;
    optional uint32        position = 2;
}

// v1/users/{user_id}/matches GET
message GetUserMatchesRequest
{
    string                                 requesting_user_id = 1;
    string                                 user_id = 1;
    optional uint32                        limit = 2;
    optional uint32                        offset = 3;
    optional player_match_sorting_options  sort_by = 4;
    optional player_match_filters          filters = 5;
}
message GetUserMatchesResponse
{
    int32                    status_code = 1;
    optional repeated match  matches = 2;
}

// v1/matches POST
message CreateMatchRequest
{
    string                   requesting_user_id = 1;
    repeated string          invited_users_ids = 1;
    optional match_settings  settings = 2;
}
message CreateMatchResponse
{
    int32            status_code = 1;
    optional string  match_id = 2;
}

// v1/matches/{match_id} POST
message JoinMatchRequest
{
    string  requesting_user_id = 1;
    string  match_id = 1;
}
message JoinMatchResponse
{
    int32 status_code = 1;
}

// v1/matches/{match_id} GET
message GetMatchRequest
{
    string  requesting_user_id = 1;
    string  match_id = 1;
}
message GetMatchResponse
{
    int32          status_code = 1;
    optional match match = 2;
}

// v1/matches/{match_id} DELETE
message AbandonMatchRequest
{
    string  requesting_user_id = 1;
    string  match_id = 1;
}
message AbandonMatchResponse
{
    int32 status_code = 1;
}