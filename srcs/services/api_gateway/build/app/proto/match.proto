syntax = "proto3";

package match.api_gateway;


service MatchAPIGatewayService
{
  rpc GetUserMatches     (GetUserMatchesRequest)    returns (GetUserMatchesResponse) {}
  rpc CreateMatch        (CreateMatchRequest)       returns (CreateMatchResponse) {}
  rpc JoinMatch          (JoinMatchRequest)         returns (JoinMatchResponse) {}
  rpc GetMatch           (GetMatchRequest)          returns (GetMatchResponse) {}
  rpc LeaveMatch         (LeaveMatchRequest)        returns (LeaveMatchResponse) {}
}

message Match
{
  string           id                  = 1;
  repeated string  player_ids          = 2;
  string           status              = 3;
  uint64           started_timestamp   = 4;
  uint64           finished_timestamp  = 5;
}

// v1/users/{user_id}/matches GET
message GetUserMatchesRequest
{
  string                requester_user_id = 1;
  string                user_id            = 2;
  uint32                limit              = 3;
  uint32                offset             = 4;
  string                etag               = 7;
}
message GetUserMatchesResponse
{
  uint16          status_code  = 1;
  repeated Match  matches      = 2;
  string          etag         = 3;
}

// v1/matches POST
message CreateMatchRequest
{
  string           requester_user_id  = 1;
  repeated string  invited_user_ids    = 2;
  MatchSettings    settings            = 3;
}
message CreateMatchResponse
{
  uint16  status_code  = 1;
  string  match_id     = 2;
}

// v1/matches/{match_id} POST
message JoinMatchRequest
{
  string  requester_user_id   = 1;
  string  match_id             = 2;
}
message JoinMatchResponse
{
  uint16  status_code = 1;
}

// v1/matches/{match_id} GET
message GetMatchRequest
{
  string requester_user_id  = 1;
  string match_id            = 2;
  string etag                = 3;
}
message GetMatchResponse
{
  uint16 status_code  = 1;
  Match  match        = 2;
  string etag         = 3;
}

// v1/matches/{match_id} DELETE
message LeaveMatchRequest
{
  string  requester_user_id  = 1;
  string  match_id            = 2;
}
message LeaveMatchResponse
{
  uint16  status_code = 1;
}