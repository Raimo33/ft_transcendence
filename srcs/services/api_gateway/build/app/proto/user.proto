syntax = "proto3";

package user.api_gateway;


service UserAPIGatewayService
{
  rpc RegisterUser                  (RegisterUserRequest)                  returns (RegisterUserResponse) {}
  rpc GetUserProfile                (GetUserProfileRequest)                returns (GetUserProfileResponse) {}
  rpc GetUserStatus                 (GetUserStatusRequest)                 returns (GetUserStatusResponse) {}
  rpc DeleteAccount                 (DeleteAccountRequest)                 returns (DeleteAccountResponse) {}
  rpc GetPrivateProfile             (GetPrivateProfileRequest)             returns (GetPrivateProfileResponse) {}
  rpc UpdateProfile                 (UpdateProfileRequest)                 returns (UpdateProfileResponse) {}
  rpc UpdatePassword                (UpdatePasswordRequest)                returns (UpdatePasswordResponse) {}
  // rpc RequestPasswordReset          (RequestPasswordResetRequest)          returns (RequestPasswordResetResponse) {}
  // rpc CheckPasswordResetToken       (CheckPasswordResetTokenRequest)       returns (CheckPasswordResetTokenResponse) {}
  // rpc ResetPassword                 (ResetPasswordRequest)                 returns (ResetPasswordResponse) {}
  // rpc UpdateEmail                   (UpdateEmailRequest)                   returns (UpdateEmailResponse) {}
  // rpc CheckEmailVerificationToken   (CheckEmailVerificationTokenRequest)   returns (VerifyEmailResponse) {}
  rpc Enable2FA                     (Enable2FARequest)                     returns (Enable2FAResponse) {}
  rpc Get2FAStatus                  (Get2FAStatusRequest)                  returns (Get2FAStatusResponse) {}
  rpc Disable2FA                    (Disable2FARequest)                    returns (Disable2FAResponse) {}
  rpc Check2FACode                  (Check2FACodeRequest)                  returns (Check2FACodeResponse) {}
  rpc LoginUser                     (LoginUserRequest)                     returns (LoginUserResponse) {}
  rpc LogoutUser                    (LogoutUserRequest)                    returns (LogoutUserResponse) {}
  rpc AddFriend                     (AddFriendRequest)                     returns (AddFriendResponse) {}
  rpc GetFriends                    (GetFriendsRequest)                    returns (GetFriendsResponse) {}
  rpc RemoveFriend                  (RemoveFriendRequest)                  returns (RemoveFriendResponse) {}
}

message UserProfile
{
  required string  id            = 1;
  required string  display_name  = 2;
  required string  avatar        = 3;
  required string  status        = 4;
}
message User
{
  required string  id                      = 1;
  required string  display_name            = 2;
  required string  avatar                  = 3;
  required string  status                  = 4;
  required string  email                   = 7;
  required bool    two_factor_auth_enabled = 8;
}

// v1/users POST
message RegisterUserRequest
{
  string email         = 1;
  string password      = 2;
  string display_name  = 3;
  string avatar        = 4;
}
message RegisterUserResponse
{
  string  user_id      = 1;
  uint16  status_code  = 2;
}

// v1/users/{user_id}/profile GET
message GetUserProfileRequest
{
  required string requester_user_id  = 1;
  required string user_id            = 2;
}
message GetUserProfileResponse
{
  optional UserProfile  profile     = 1;
  required uint16       status_code = 2;
}

// v1/users/{user_id}/status GET
message GetUserStatusRequest
{
  string  requester_user_id  = 1;
  string  user_id            = 2;
}
message GetUserStatusResponse
{
  string  user_status = 1;
  uint16  status_code = 2;
}

// v1/user DELETE
message DeleteAccountRequest
{
  string  requester_user_id = 1;
}
message DeleteAccountResponse
{
  uint16  status_code = 1;
}

// v1/user/profile GET
message GetPrivateProfileRequest
{
  required string requester_user_id  = 1;
}
message GetPrivateProfileResponse
{
  optional User    profile      = 1;
  required uint16  status_code  = 2;
}

// v1/user/profile PATCH
message UpdateProfileRequest
{
  string  requester_user_id   = 1;
  string  display_name        = 2;
  string  avatar              = 3;
}
message UpdateProfileResponse
{
  uint16  status_code = 1;
}

// v1/user/password PUT
message UpdatePasswordRequest
{
  string  requester_user_id   = 1;
  string  old_password        = 2;
  string  new_password        = 3;
}
message UpdatePasswordResponse
{
  uint16  status_code = 1;
}

// // v1/user/password/reset POST
// message RequestPasswordResetRequest
// {
//   required string email = 1;
// }
// message RequestPasswordResetResponse
// {
//   required uint16  status_code = 1;
// }

// // v1/user/password/reset/{token} POST
// message CheckPasswordResetTokenRequest
// {
//   required string  token = 1;
// }
// message CheckPasswordResetTokenResponse
// {
//   required uint16  status_code = 1;
// }

// // v1/user/password/reset/{token} PATCH
// message ResetPasswordRequest
// {
//   required string  token         = 1;
//   required string  new_password  = 2;
// }
// message ResetPasswordResponse
// {
//   required uint16  status_code = 1;
// }

// // v1/user/email PATCH
// message UpdateEmailRequest
// {
//   required string  requester_user_id = 1;
//   required string  new_email          = 2;
//   required string  current_password   = 3;
//   optional string  totp_code          = 4;
// }
// message UpdateEmailResponse
// {
//   required uint16  status_code = 1;
// }

// // v1/user/email/verify POST
// message VerifyEmailRequest
// {
//   required string requester_user_id = 1;
// }
// message VerifyEmailResponse
// {
//   required uint16  status_code = 1;
// }

// // v1/user/email/verify POST
// message CheckEmailVerificationTokenRequest
// {
//   required string  token = 1;
// }
// message VerifyEmailResponse
// {
//   required uint16  status_code = 1;
// }

// v1/user/2fa POST
message Enable2FARequest
{
  string  requester_user_id = 1;
}
message Enable2FAResponse
{
  string totp_secret = 1;
  uint16 status_code = 2;
}

// v1/users/{user_id}/2fa GET
message Get2FAStatusRequest
{
  string requester_user_id = 1;
}
message Get2FAStatusResponse
{
  uint16 status_code             = 1;
  bool   two_factor_auth_enabled = 2;
}

// v1/user/2fa DELETE
message Disable2FARequest
{
  string requester_user_id = 1;
}
message Disable2FAResponse
{
  uint16  status_code = 1;
}

// v1/user/2fa/verify POST
message Check2FACodeRequest
{
  string  requester_user_id  = 1;
  string  totp_code          = 2;
}
message Check2FACodeResponse
{
  uint16  status_code = 1;
}

// v1/user/login POST
message LoginUserRequest
{
  string email     = 1;
  string password  = 2;
}
message LoginUserResponse
{
  string jwt = 2;
  uint16 status_code = 1;
}

// v1/user/friends POST
message AddFriendRequest
{
  string  requester_user_id = 1;
  string  friend_id          = 2;
}
message AddFriendResponse
{
  uint16  status_code = 1;
}

// v1/user/friends GET
message GetFriendsRequest
{
  required string          requester_user_id   = 1;
  optional uint32          limit                = 2;
  optional uint32          offset               = 3;
}
message GetFriendsResponse
{
  required uint16           status_code = 1;
  optional repeated string  friend_ids  = 2;
}

// v1/user/friends/{friend_id} DELETE
message RemoveFriendRequest
{
  string  requester_user_id  = 1;
  string  friend_id           = 2;
}
message RemoveFriendResponse
{
  uint16  status_code = 1;
}