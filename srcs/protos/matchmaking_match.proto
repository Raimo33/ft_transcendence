syntax = "proto3";

package matchmaking;

import "google/protobuf/empty.proto";
import "common/identifier.proto";

service MatchmakingMatch
{
  rpc Ping                  (google.protobuf.Empty)         returns (google.protobuf.Empty)  {};
  rpc AddMatchmakingUser    (common.Identifier)             returns (google.protobuf.Empty)  {};  //TODO will retun Conflict error if user is already in the queue
  rpc RemoveMatchmakingUser (common.Identifier)             returns (google.protobuf.Empty)  {};  //TODO will return NotFound error if user is not in the queue
  rpc AddMatchInvitation    (Invitation)                    returns (google.protobuf.Empty)  {};  //TODO will return Conflict error if invitation already exists
  rpc DeleteMatchInvitation (Invitation)                    returns (google.protobuf.Empty)  {};  //TODO will raise NotFound error if invitation does not exist
  rpc AcceptMatchInvitation (Invitation)                    returns (google.protobuf.Empty)  {};  //TODO will raise NotFound error if invitation does not exist
}

message Invitation
{
  string from_user_id = 1;
  string to_user_id   = 2;
}